@startuml
participant ":TransactionList" as Foo1
participant ":Transaction" as Foo2
participant ":DateTime" as Foo3
participant ":Logger" as Foo4
[->      Foo1 : ""addTransaction(taskExpression, members)""
Foo1 -> Foo1:addTransaction(expression,memberList)
Foo1 -> Foo2: new Transaction(expression, memberList)
Foo2 -> Foo2:parseTransaction(expression, memberList)
alt expression contains dateTimeExpression
    Foo2 -> Foo3:new DateTime(dateTimeExpression)
    alt dateTimeExpression is valid
        Foo3 --> Foo2: DateTime object created
        Foo2 -> Foo2: transaction DateTime added
    else dateTimeExpression is not in format
        Foo3 -> Foo4:LogWarning(invalid dateTime format)
        Foo4 -> Foo4: log(Level.Warning, "Invalid DateTime Format")
   else dateTimeExpression is of future
        Foo3 -> Foo4: LogWarning(invalid  dateTime input)
        Foo4 -> Foo4: log(Level.Warning,"DateTime of future is not allowed")
   end
end
@enduml